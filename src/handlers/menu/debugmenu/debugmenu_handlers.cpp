#include "debugmenu_handlers.hpp"
#include "debugmenu.hpp"

constexpr auto MUTED_VOLUME = 0;
constexpr auto DEFAULT_VOLUME = 0x4026;
constexpr auto PAUSED_VOLUME = 0x40C;

struct AudioProperties {
    fillerData<0x64> filler;
    u16 volume;
    fillerData<0x8E> filler2;
};

ASMDefined AudioProperties lbl_801BBE60;

inline void SetAudioVolume(const u16 volume, const bool isMusicDisabled) {
    AudioProperties *propertiesRightChannel = &lbl_801BBE60 + 0x3E;
    AudioProperties *propertiesLeftChannel = &lbl_801BBE60 + 0x3F;

    if (isMusicDisabled) {
        propertiesRightChannel->volume = volume;
        propertiesLeftChannel->volume = volume;
    } else if (propertiesLeftChannel->volume != PAUSED_VOLUME || propertiesRightChannel->volume != PAUSED_VOLUME) {
        propertiesRightChannel->volume = volume;
        propertiesLeftChannel->volume = volume;
    }
}

void DebugMenuHandler_DisableMusic() {
    const bool isMusicDisabled = DebugMenu_CheckOption(DebugMenuOptions::DisableMusic);
    if (isMusicDisabled) {
        SetAudioVolume(MUTED_VOLUME, isMusicDisabled);
    } else {
        SetAudioVolume(DEFAULT_VOLUME, isMusicDisabled);
    }
}

ASMDefined void *gsTexSrc_Game2D_00;
ASMDefined void *lbl_001C2C88;
ASMDefined void *lbl_001C2C7C;

ASMDefined void DrawTimer(u32 minutes, u32 seconds, u32 milliSeconds, u32 timeTextureRGBA, u32 numberTextureRGBA);

#include "macros.h"
#include "riders/gamemode.hpp"

void DrawTimerExtra(u32 minutes,
                    u32 seconds,
                    u32 milliSeconds,
                    u32 timeTextureRGBA,
                    u32 numberTextureRGBA,
                    s32 extraXpos,
                    s32 extraYpos) {
    asm volatile(
            "   stwu r1, -0x2B0(r1)\n"
            "   mflr r0\n"
            "   stw r0, 0x2B4(r1)\n"
            "   stmw r25, 0x28c(r1)\n"
            "   cmpwi cr0, r3, 0\n"
            "   cmpwi cr1, r4, 0\n"
            "   cmpwi cr2, r5, 0\n"
            "   crand 4*cr1+eq, 4*cr1+eq, 4*cr2+eq\n" // Todo: Assembler doesn't like this for some reason
            "   crand 4*cr0+eq, 4*cr0+eq, 4*cr1+eq\n"
            "   beq- end\n"
            "   mr r25, r8\n" // extraXpos
            "   mr r26, r9\n" // extraYpos

            //" lis r8, gsTexSrc_Game2D_00@ha\n"
            //" addi r11, r8, gsTexSrc_Game2D_00@l\n"
            //" lis r8, lbl_001C2C88@ha\n"
            //" lis r31, 0x4330\n"
            //" addi r12, r8, lbl_001C2C88@l\n"
            //" lis r27, lbl_001C2C7C@ha\n"
            //" stw r31, 0xa8(r1)\n"
            //" mr r30, r6\n"
            //" lfd f5, 0(r12)\n"
            //" stw r31, 0xb0(r1)\n"
            //" stw r31, 0x88(r1)\n"
            //" lwz r9, 0x3c(r11)\n"
            //" lwz r10, 0x38(r11)\n"
            //" xoris r8, r9, 0x8000\n"
            //" lwz r28, 0x30(r11)\n"
            //" stw r8, 0xac(r1)\n"
            //" xoris r0, r10, 0x8000\n"
            //" lwz r11, 0x34(r11)\n"
            //" xoris r29, r28, 0x8000\n"
            //" lfd f0, 0xa8(r1)\n"
            //" add r10, r28, r10\n"
            //" stw r29, 0x8c(r1)\n"
            //" xoris r12, r11, 0x8000\n"
            //" fsubs f1, f0, f5\n"
            //" add r8, r11, r9\n"
            //" stw r0, 0xb4(r1)\n"
            //" xoris r0, r8, 0x8000\n"
            //" addi r8, r27, lbl_001C2C7C@l\n"
            //" xoris r11, r10, 0x8000\n"
            //" lfd f0, 0xb0(r1)\n"
            //" fabs f2, f1\n"
            //" lfs f4, 0(r8)\n"
            //" mr r27, r3\n"
            //" fsubs f1, f0, f5\n"
            //" mr r28, r4\n"
            //" frsp f0, f2\n"
            //" lfd f2, 0x88(r1)\n"
            //" mr r29, r5\n"
            //" fabs f1, f1\n"
            //" fctiwz f0, f0\n"
            //" stw r12, 0x94(r1)\n"
            //" fsubs f3, f2, f5\n"
            //" addi r9, r1, 0x78\n"
            //" stw r31, 0x90(r1)\n"
            //" frsp f1, f1\n"
            //" stfd f0, 0xc0(r1)\n"
            //" fmuls f3, f3, f4\n"
            //" lfd f2, 0x90(r1)\n"
            //" li r3, 0xd0\n"
            //" add r3, r3, r25\n"
            //" fctiwz f1, f1\n"
            //" fsubs f0, f2, f5\n"
            //" stw r11, 0x9c(r1)\n"
            //" lwz r5, 0xc4(r1)\n"
            //" li r4, 0x2b\n"
            //" add r4, r4, r26\n"
            //" stfd f1, 0xb8(r1)\n"
            //" fmuls f2, f0, f4\n"
            //" stw r31, 0x98(r1)\n"
            //" li r8, 0\n"
            //" lwz r10, 0xbc(r1)\n"
            //" addi r6, r5, 0x2b\n"
            //" add r6, r6, r26\n"
            //" lfd f0, 0x98(r1)\n"
            //" stw r0, 0xa4(r1)\n"
            //" addi r5, r10, 0xd0\n"
            //" add r5, r5, r25\n"
            //" fsubs f1, f0, f5\n"
            //" stw r31, 0xa0(r1)\n"
            //" lfd f0, 0xa0(r1)\n"
            //" fmuls f1, f1, f4\n"
            //" stfs f3, 0x78(r1)\n"
            //" fsubs f0, f0, f5\n"
            //" stfs f2, 0x7c(r1)\n"
            //" fmuls f0, f0, f4\n"
            //" stfs f1, 0x80(r1)\n"
            //" stfs f0, 0x84(r1)\n"
            //" bl CreateHUDElement\n"
            "   lis r3, 0xcccd\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, -13107\n"
            "   lis r4, lbl_001C2C88@ha\n"
            "   mulhwu r0, r0, r29\n"
            "   lis r3, lbl_001C2C7C@ha\n"
            "   lis r5, gsTexSrc_Game2D_00@ha\n"
            "   lfd f7, lbl_001C2C88@l(r4)\n"
            "   lfs f6, lbl_001C2C7C@l(r3)\n"
            "   mr r7, r30\n"
            "   srwi r31, r0, 3\n"
            "   addi r0, r5, gsTexSrc_Game2D_00@l\n"
            "   mulli r5, r31, 0xa\n"
            "   stw r11, 0xe8(r1)\n"
            "   addi r9, r1, 0x68\n"
            "   stw r11, 0xf0(r1)\n"
            "   subf r4, r5, r29\n"
            "   addi r4, r4, 0x20\n"
            "   stw r11, 0xc8(r1)\n"
            "   slwi r3, r4, 4\n"
            "   add r8, r0, r3\n"
            "   stw r11, 0xd0(r1)\n"
            "   lwz r6, 8(r8)\n"
            "   li r3, 0x17a\n"
            "   add r3, r3, r25\n"
            "   lwz r5, 0xc(r8)\n"
            "   xoris r0, r6, 0x8000\n"
            "   lwz r10, 0(r8)\n"
            "   xoris r4, r5, 0x8000\n"
            "   stw r0, 0xf4(r1)\n"
            "   lwz r8, 4(r8)\n"
            "   add r6, r10, r6\n"
            "   stw r4, 0xec(r1)\n"
            "   xoris r4, r10, 0x8000\n"
            "   lfd f0, 0xf0(r1)\n"
            "   add r0, r8, r5\n"
            "   lfd f1, 0xe8(r1)\n"
            "   xoris r10, r8, 0x8000\n"
            "   fsubs f0, f0, f7\n"
            "   stw r4, 0xcc(r1)\n"
            "   fsubs f1, f1, f7\n"
            "   xoris r5, r6, 0x8000\n"
            "   stw r10, 0xd4(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f4, 0xc8(r1)\n"
            "   fabs f2, f0\n"
            "   stw r11, 0xd8(r1)\n"
            "   fsubs f5, f4, f7\n"
            "   lfd f3, 0xd0(r1)\n"
            "   frsp f0, f1\n"
            "   stw r5, 0xdc(r1)\n"
            "   frsp f1, f2\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f4, f3, f7\n"
            "   lfd f2, 0xd8(r1)\n"
            "   fctiwz f1, f1\n"
            "   stw r0, 0xe4(r1)\n"
            "   fsubs f3, f2, f7\n"
            "   li r8, 0\n"
            "   stw r11, 0xe0(r1)\n"
            "   fctiwz f0, f0\n"
            "   stfd f1, 0xf8(r1)\n"
            "   fmuls f5, f5, f6\n"
            "   lfd f2, 0xe0(r1)\n"
            "   fmuls f4, f4, f6\n"
            "   fmuls f3, f3, f6\n"
            "   stfd f0, 0x100(r1)\n"
            "   fsubs f1, f2, f7\n"
            "   lwz r5, 0xfc(r1)\n"
            "   lwz r6, 0x104(r1)\n"
            "   fmuls f0, f1, f6\n"
            "   stfs f5, 0x68(r1)\n"
            "   addi r5, r5, 0x17a\n"
            "   addi r6, r6, 0x39\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   stfs f4, 0x6c(r1)\n"
            "   stfs f3, 0x70(r1)\n"
            "   stfs f0, 0x74(r1)\n"
            "   bl CreateHUDElement\n"
            "   addi r0, r31, 0x20\n"
            "   lis r3, gsTexSrc_Game2D_00@ha\n"
            "   slwi r4, r0, 4\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, gsTexSrc_Game2D_00@l\n"
            "   lis r3, lbl_001C2C88@ha\n"
            "   add r8, r0, r4\n"
            "   stw r11, 0x128(r1)\n"
            "   lwz r4, 0xc(r8)\n"
            "   addi r7, r3, lbl_001C2C88@l\n"
            "   lwz r5, 8(r8)\n"
            "   addi r10, r8, 4\n"
            "   xoris r3, r4, 0x8000\n"
            "   lfd f5, 0(r7)\n"
            "   stw r3, 0x12c(r1)\n"
            "   xoris r0, r5, 0x8000\n"
            "   lwz r9, 0(r8)\n"
            "   lis r6, lbl_001C2C7C@ha\n"
            "   lfd f0, 0x128(r1)\n"
            "   addi r8, r6, lbl_001C2C7C@l\n"
            "   add r3, r9, r5\n"
            "   xoris r7, r9, 0x8000\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x134(r1)\n"
            "   xoris r6, r3, 0x8000\n"
            "   lwz r5, 0(r10)\n"
            "   stw r11, 0x130(r1)\n"
            "   addi r9, r1, 0x58\n"
            "   lfd f0, 0x130(r1)\n"
            "   fabs f2, f1\n"
            "   stw r7, 0x10c(r1)\n"
            "   add r0, r5, r4\n"
            "   fsubs f1, f0, f5\n"
            "   xoris r4, r5, 0x8000\n"
            "   frsp f0, f2\n"
            "   stw r11, 0x108(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f2, 0x108(r1)\n"
            "   fctiwz f0, f0\n"
            "   stw r4, 0x114(r1)\n"
            "   mr r7, r30\n"
            "   frsp f1, f1\n"
            "   stfd f0, 0x140(r1)\n"
            "   fsubs f3, f2, f5\n"
            "   lfs f4, 0(r8)\n"
            "   li r3, 0x162\n"
            "   add r3, r3, r25\n"
            "   stw r11, 0x110(r1)\n"
            "   fctiwz f1, f1\n"
            "   lwz r5, 0x144(r1)\n"
            "   lfd f2, 0x110(r1)\n"
            "   fmuls f3, f3, f4\n"
            "   stw r6, 0x11c(r1)\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f0, f2, f5\n"
            "   stfd f1, 0x138(r1)\n"
            "   li r8, 0\n"
            "   addi r6, r5, 0x39\n"
            "   stw r11, 0x118(r1)\n"
            "   fmuls f2, f0, f4\n"
            "   lfd f0, 0x118(r1)\n"
            "   lwz r10, 0x13c(r1)\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x124(r1)\n"
            "   addi r5, r10, 0x162\n"
            "   stw r11, 0x120(r1)\n"
            "   fmuls f1, f1, f4\n"
            "   lfd f0, 0x120(r1)\n"
            "   stfs f3, 0x58(r1)\n"
            "   fsubs f0, f0, f5\n"
            "   stfs f2, 0x5c(r1)\n"
            "   fmuls f0, f0, f4\n"
            "   stfs f1, 0x60(r1)\n"
            "   stfs f0, 0x64(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "   lis r3, 0xcccd\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, -13107\n"
            "   lis r4, lbl_001C2C88@ha\n"
            "   mulhwu r0, r0, r28\n"
            "   lis r3, lbl_001C2C7C@ha\n"
            "   lis r5, gsTexSrc_Game2D_00@ha\n"
            "   lfd f7, lbl_001C2C88@l(r4)\n"
            "   lfs f6, lbl_001C2C7C@l(r3)\n"
            "   mr r7, r30\n"
            "   srwi r31, r0, 3\n"
            "   addi r0, r5, gsTexSrc_Game2D_00@l\n"
            "   mulli r5, r31, 0xa\n"
            "   stw r11, 0x168(r1)\n"
            "   addi r9, r1, 0x48\n"
            "   stw r11, 0x170(r1)\n"
            "   subf r4, r5, r28\n"
            "   addi r4, r4, 0x20\n"
            "   stw r11, 0x148(r1)\n"
            "   slwi r3, r4, 4\n"
            "   add r8, r0, r3\n"
            "   stw r11, 0x150(r1)\n"
            "   lwz r6, 8(r8)\n"
            "   li r3, 0x140\n"
            "   add r3, r3, r25\n"
            "   lwz r5, 0xc(r8)\n"
            "   xoris r0, r6, 0x8000\n"
            "   lwz r10, 0(r8)\n"
            "   xoris r4, r5, 0x8000\n"
            "   stw r0, 0x174(r1)\n"
            "   lwz r8, 4(r8)\n"
            "   add r6, r10, r6\n"
            "   stw r4, 0x16c(r1)\n"
            "   xoris r4, r10, 0x8000\n"
            "   lfd f0, 0x170(r1)\n"
            "   add r0, r8, r5\n"
            "   lfd f1, 0x168(r1)\n"
            "   xoris r10, r8, 0x8000\n"
            "   fsubs f0, f0, f7\n"
            "   stw r4, 0x14c(r1)\n"
            "   fsubs f1, f1, f7\n"
            "   xoris r5, r6, 0x8000\n"
            "   stw r10, 0x154(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f4, 0x148(r1)\n"
            "   fabs f2, f0\n"
            "   stw r11, 0x158(r1)\n"
            "   fsubs f5, f4, f7\n"
            "   lfd f3, 0x150(r1)\n"
            "   frsp f0, f1\n"
            "   stw r5, 0x15c(r1)\n"
            "   frsp f1, f2\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f4, f3, f7\n"
            "   lfd f2, 0x158(r1)\n"
            "   fctiwz f1, f1\n"
            "   stw r0, 0x164(r1)\n"
            "   fsubs f3, f2, f7\n"
            "   li r8, 0\n"
            "   stw r11, 0x160(r1)\n"
            "   fctiwz f0, f0\n"
            "   stfd f1, 0x178(r1)\n"
            "   fmuls f5, f5, f6\n"
            "   lfd f2, 0x160(r1)\n"
            "   fmuls f4, f4, f6\n"
            "   fmuls f3, f3, f6\n"
            "   stfd f0, 0x180(r1)\n"
            "   fsubs f1, f2, f7\n"
            "   lwz r5, 0x17c(r1)\n"
            "   lwz r6, 0x184(r1)\n"
            "   fmuls f0, f1, f6\n"
            "   stfs f5, 0x48(r1)\n"
            "   addi r5, r5, 0x140\n"
            "   addi r6, r6, 0x39\n"
            "   stfs f4, 0x4c(r1)\n"
            "   stfs f3, 0x50(r1)\n"
            "   stfs f0, 0x54(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "   addi r0, r31, 0x20\n"
            "   lis r3, gsTexSrc_Game2D_00@ha\n"
            "   slwi r4, r0, 4\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, gsTexSrc_Game2D_00@l\n"
            "   lis r3, lbl_001C2C88@ha\n"
            "   add r8, r0, r4\n"
            "   stw r11, 0x1a8(r1)\n"
            "   lwz r4, 0xc(r8)\n"
            "   addi r7, r3, lbl_001C2C88@l\n"
            "   lwz r5, 8(r8)\n"
            "   addi r10, r8, 4\n"
            "   xoris r3, r4, 0x8000\n"
            "   lfd f5, 0(r7)\n"
            "   stw r3, 0x1ac(r1)\n"
            "   xoris r0, r5, 0x8000\n"
            "   lwz r9, 0(r8)\n"
            "   lis r6, lbl_001C2C7C@ha\n"
            "   lfd f0, 0x1a8(r1)\n"
            "   addi r8, r6, lbl_001C2C7C@l\n"
            "   add r3, r9, r5\n"
            "   xoris r7, r9, 0x8000\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x1b4(r1)\n"
            "   xoris r6, r3, 0x8000\n"
            "   lwz r5, 0(r10)\n"
            "   stw r11, 0x1b0(r1)\n"
            "   addi r9, r1, 0x38\n"
            "   lfd f0, 0x1b0(r1)\n"
            "   fabs f2, f1\n"
            "   stw r7, 0x18c(r1)\n"
            "   add r0, r5, r4\n"
            "   fsubs f1, f0, f5\n"
            "   xoris r4, r5, 0x8000\n"
            "   frsp f0, f2\n"
            "   stw r11, 0x188(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f2, 0x188(r1)\n"
            "   fctiwz f0, f0\n"
            "   stw r4, 0x194(r1)\n"
            "   mr r7, r30\n"
            "   frsp f1, f1\n"
            "   stfd f0, 0x1c0(r1)\n"
            "   fsubs f3, f2, f5\n"
            "   lfs f4, 0(r8)\n"
            "   li r3, 0x128\n"
            "   add r3, r3, r25\n"
            "   stw r11, 0x190(r1)\n"
            "   fctiwz f1, f1\n"
            "   lwz r5, 0x1c4(r1)\n"
            "   lfd f2, 0x190(r1)\n"
            "   fmuls f3, f3, f4\n"
            "   stw r6, 0x19c(r1)\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f0, f2, f5\n"
            "   stfd f1, 0x1b8(r1)\n"
            "   li r8, 0\n"
            "   addi r6, r5, 0x39\n"
            "   stw r11, 0x198(r1)\n"
            "   fmuls f2, f0, f4\n"
            "   lfd f0, 0x198(r1)\n"
            "   lwz r10, 0x1bc(r1)\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x1a4(r1)\n"
            "   addi r5, r10, 0x128\n"
            "   stw r11, 0x1a0(r1)\n"
            "   fmuls f1, f1, f4\n"
            "   lfd f0, 0x1a0(r1)\n"
            "   stfs f3, 0x38(r1)\n"
            "   fsubs f0, f0, f5\n"
            "   stfs f2, 0x3c(r1)\n"
            "   fmuls f0, f0, f4\n"
            "   stfs f1, 0x40(r1)\n"
            "   stfs f0, 0x44(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "   lis r3, 0xcccd\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, -13107\n"
            "   lis r4, lbl_001C2C88@ha\n"
            "   mulhwu r0, r0, r27\n"
            "   lis r3, lbl_001C2C7C@ha\n"
            "   lis r5, gsTexSrc_Game2D_00@ha\n"
            "   lfd f7, lbl_001C2C88@l(r4)\n"
            "   lfs f6, lbl_001C2C7C@l(r3)\n"
            "   mr r7, r30\n"
            "   srwi r31, r0, 3\n"
            "   addi r0, r5, gsTexSrc_Game2D_00@l\n"
            "   mulli r5, r31, 0xa\n"
            "   stw r11, 0x1e8(r1)\n"
            "   addi r9, r1, 0x28\n"
            "   stw r11, 0x1f0(r1)\n"
            "   subf r4, r5, r27\n"
            "   addi r4, r4, 0x20\n"
            "   stw r11, 0x1c8(r1)\n"
            "   slwi r3, r4, 4\n"
            "   add r8, r0, r3\n"
            "   stw r11, 0x1d0(r1)\n"
            "   lwz r6, 8(r8)\n"
            "   li r3, 0x108\n"
            "   add r3, r3, r25\n"
            "   lwz r5, 0xc(r8)\n"
            "   xoris r0, r6, 0x8000\n"
            "   lwz r10, 0(r8)\n"
            "   xoris r4, r5, 0x8000\n"
            "   stw r0, 0x1f4(r1)\n"
            "   lwz r8, 4(r8)\n"
            "   add r6, r10, r6\n"
            "   stw r4, 0x1ec(r1)\n"
            "   xoris r4, r10, 0x8000\n"
            "   lfd f0, 0x1f0(r1)\n"
            "   add r0, r8, r5\n"
            "   lfd f1, 0x1e8(r1)\n"
            "   xoris r10, r8, 0x8000\n"
            "   fsubs f0, f0, f7\n"
            "   stw r4, 0x1cc(r1)\n"
            "   fsubs f1, f1, f7\n"
            "   xoris r5, r6, 0x8000\n"
            "   stw r10, 0x1d4(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f4, 0x1c8(r1)\n"
            "   fabs f2, f0\n"
            "   stw r11, 0x1d8(r1)\n"
            "   fsubs f5, f4, f7\n"
            "   lfd f3, 0x1d0(r1)\n"
            "   frsp f0, f1\n"
            "   stw r5, 0x1dc(r1)\n"
            "   frsp f1, f2\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f4, f3, f7\n"
            "   lfd f2, 0x1d8(r1)\n"
            "   fctiwz f1, f1\n"
            "   stw r0, 0x1e4(r1)\n"
            "   fsubs f3, f2, f7\n"
            "   li r8, 0\n"
            "   stw r11, 0x1e0(r1)\n"
            "   fctiwz f0, f0\n"
            "   stfd f1, 0x1f8(r1)\n"
            "   fmuls f5, f5, f6\n"
            "   lfd f2, 0x1e0(r1)\n"
            "   fmuls f4, f4, f6\n"
            "   fmuls f3, f3, f6\n"
            "   stfd f0, 0x200(r1)\n"
            "   fsubs f1, f2, f7\n"
            "   lwz r5, 0x1fc(r1)\n"
            "   lwz r6, 0x204(r1)\n"
            "   fmuls f0, f1, f6\n"
            "   stfs f5, 0x28(r1)\n"
            "   addi r5, r5, 0x108\n"
            "   addi r6, r6, 0x39\n"
            "   stfs f4, 0x2c(r1)\n"
            "   stfs f3, 0x30(r1)\n"
            "   stfs f0, 0x34(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "   addi r0, r31, 0x20\n"
            "   lis r3, gsTexSrc_Game2D_00@ha\n"
            "   slwi r4, r0, 4\n"
            "   lis r11, 0x4330\n"
            "   addi r0, r3, gsTexSrc_Game2D_00@l\n"
            "   lis r3, lbl_001C2C88@ha\n"
            "   add r8, r0, r4\n"
            "   stw r11, 0x228(r1)\n"
            "   lwz r4, 0xc(r8)\n"
            "   addi r7, r3, lbl_001C2C88@l\n"
            "   lwz r5, 8(r8)\n"
            "   addi r10, r8, 4\n"
            "   xoris r3, r4, 0x8000\n"
            "   lfd f5, 0(r7)\n"
            "   stw r3, 0x22c(r1)\n"
            "   xoris r0, r5, 0x8000\n"
            "   lwz r9, 0(r8)\n"
            "   lis r6, lbl_001C2C7C@ha\n"
            "   lfd f0, 0x228(r1)\n"
            "   addi r8, r6, lbl_001C2C7C@l\n"
            "   add r3, r9, r5\n"
            "   xoris r7, r9, 0x8000\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x234(r1)\n"
            "   xoris r6, r3, 0x8000\n"
            "   lwz r5, 0(r10)\n"
            "   stw r11, 0x230(r1)\n"
            "   addi r9, r1, 0x18\n"
            "   lfd f0, 0x230(r1)\n"
            "   fabs f2, f1\n"
            "   stw r7, 0x20c(r1)\n"
            "   add r0, r5, r4\n"
            "   fsubs f1, f0, f5\n"
            "   xoris r4, r5, 0x8000\n"
            "   frsp f0, f2\n"
            "   stw r11, 0x208(r1)\n"
            "   xoris r0, r0, 0x8000\n"
            "   fabs f1, f1\n"
            "   lfd f2, 0x208(r1)\n"
            "   fctiwz f0, f0\n"
            "   stw r4, 0x214(r1)\n"
            "   mr r7, r30\n"
            "   frsp f1, f1\n"
            "   stfd f0, 0x240(r1)\n"
            "   fsubs f3, f2, f5\n"
            "   lfs f4, 0(r8)\n"
            "   li r3, 0xf0\n"
            "   add r3, r3, r25\n"
            "   stw r11, 0x210(r1)\n"
            "   fctiwz f1, f1\n"
            "   lwz r5, 0x244(r1)\n"
            "   lfd f2, 0x210(r1)\n"
            "   fmuls f3, f3, f4\n"
            "   stw r6, 0x21c(r1)\n"
            "   li r4, 0x39\n"
            "   add r4, r4, r26\n"
            "   fsubs f0, f2, f5\n"
            "   stfd f1, 0x238(r1)\n"
            "   li r8, 0\n"
            "   addi r6, r5, 0x39\n"
            "   stw r11, 0x218(r1)\n"
            "   fmuls f2, f0, f4\n"
            "   lfd f0, 0x218(r1)\n"
            "   lwz r10, 0x23c(r1)\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x224(r1)\n"
            "   addi r5, r10, 0xf0\n"
            "   stw r11, 0x220(r1)\n"
            "   fmuls f1, f1, f4\n"
            "   lfd f0, 0x220(r1)\n"
            "   stfs f3, 0x18(r1)\n"
            "   fsubs f0, f0, f5\n"
            "   stfs f2, 0x1c(r1)\n"
            "   fmuls f0, f0, f4\n"
            "   stfs f1, 0x20(r1)\n"
            "   stfs f0, 0x24(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "   lis r3, gsTexSrc_Game2D_00@ha\n"
            "   lis r11, 0x4330\n"
            "   addi r6, r3, gsTexSrc_Game2D_00@l\n"
            "   lis r7, lbl_001C2C7C@ha\n"
            "   lwz r4, 0x17c(r6)\n"
            "   lis r3, lbl_001C2C88@ha\n"
            "   addi r9, r3, lbl_001C2C88@l\n"
            "   lwz r5, 0x178(r6)\n"
            "   xoris r3, r4, 0x8000\n"
            "   lfd f5, 0(r9)\n"
            "   stw r11, 0x268(r1)\n"
            "   xoris r0, r5, 0x8000\n"
            "   lwz r8, 0x170(r6)\n"
            "   addi r9, r1, 8\n"
            "   stw r3, 0x26c(r1)\n"
            "   lwz r6, 0x174(r6)\n"
            "   add r5, r8, r5\n"
            "   lfd f0, 0x268(r1)\n"
            "   xoris r8, r8, 0x8000\n"
            "   stw r0, 0x274(r1)\n"
            "   add r3, r6, r4\n"
            "   fsubs f1, f0, f5\n"
            "   xoris r10, r6, 0x8000\n"
            "   stw r11, 0x270(r1)\n"
            "   xoris r0, r3, 0x8000\n"
            "   xoris r6, r5, 0x8000\n"
            "   lfs f4, lbl_001C2C7C@l(r7)\n"
            "   stw r8, 0x24c(r1)\n"
            "   fabs f2, f1\n"
            "   lfd f0, 0x270(r1)\n"
            "   mr r7, r30\n"
            "   stw r11, 0x248(r1)\n"
            "   li r3, 0x11d\n"
            "   add r3, r3, r25\n"
            "   fsubs f1, f0, f5\n"
            "   frsp f0, f2\n"
            "   lfd f2, 0x248(r1)\n"
            "   stw r10, 0x254(r1)\n"
            "   li r4, 0x38\n"
            "   add r4, r4, r26\n"
            "   fabs f1, f1\n"
            "   fctiwz f0, f0\n"
            "   fsubs f3, f2, f5\n"
            "   stw r11, 0x250(r1)\n"
            "   frsp f1, f1\n"
            "   li r8, 0\n"
            "   stfd f0, 0x280(r1)\n"
            "   lfd f2, 0x250(r1)\n"
            "   fctiwz f1, f1\n"
            "   stw r6, 0x25c(r1)\n"
            "   fsubs f0, f2, f5\n"
            "   lwz r5, 0x284(r1)\n"
            "   stw r11, 0x258(r1)\n"
            "   fmuls f3, f3, f4\n"
            "   fmuls f2, f0, f4\n"
            "   stfd f1, 0x278(r1)\n"
            "   lfd f0, 0x258(r1)\n"
            "   addi r6, r5, 0x38\n"
            "   lwz r10, 0x27c(r1)\n"
            "   fsubs f1, f0, f5\n"
            "   stw r0, 0x264(r1)\n"
            "   addi r5, r10, 0x11d\n"
            "   stw r11, 0x260(r1)\n"
            "   fmuls f1, f1, f4\n"
            "   lfd f0, 0x260(r1)\n"
            "   stfs f3, 8(r1)\n"
            "   fsubs f0, f0, f5\n"
            "   stfs f2, 0xc(r1)\n"
            "   fmuls f0, f0, f4\n"
            "   stfs f1, 0x10(r1)\n"
            "   stfs f0, 0x14(r1)\n"
            "   add r5, r5, r25\n"
            "   add r6, r6, r26\n"
            "   bl CreateHUDElement\n"
            "end:\n"
            "   lmw r25, 0x28c(r1)\n"
            "   lwz r0, 0x2B4(r1)\n"
            "   mtlr r0\n"
            "   addi r1, r1, 0x2B0\n"
            );
}

ASMDefined u32 gu32ViewportNum;
ASMUsed void
DebugMenuHandler_TimerActivity(const u32 minutes, const u32 seconds, const u32 milliSeconds, const u32 timeTextureRGBA, const u32 numberTextureRGBA) {
    if (DebugMenu_CheckOption(DebugMenuOptions::TimerActivity_ActiveInSingleplayer)) {
        if (gu32ViewportNum == 1 || CurrentGameMode == BattleMode) {
            DrawTimer(minutes, seconds, milliSeconds, timeTextureRGBA, numberTextureRGBA);
        }
    } else if (DebugMenu_CheckOption(DebugMenuOptions::TimerActivity_ActiveIn1v1)) {
        if (gu32ViewportNum == 2 || CurrentGameMode == BattleMode) {
            DrawTimer(minutes, seconds, milliSeconds, timeTextureRGBA, numberTextureRGBA);
        }
    } else if (DebugMenu_CheckOption(DebugMenuOptions::TimerActivity_ActiveIn1v1Middle)) {
        if (gu32ViewportNum == 2) {
            DrawTimerExtra(minutes, seconds, milliSeconds, timeTextureRGBA, numberTextureRGBA, 0, 171);
        }
    } else if (DebugMenu_CheckOption(DebugMenuOptions::TimerActivity_ActiveIn3OrMorePlayers)) {
        if (gu32ViewportNum >= 3 || CurrentGameMode == BattleMode) {
            DrawTimer(minutes, seconds, milliSeconds, timeTextureRGBA, numberTextureRGBA);
        }
    }
}

inline u8 FetchGameState() {
    for (const auto &currentObject: getObjectList()) {
        // try to find GameCtrl task
        if (currentObject.object_group == 1) {
            return currentObject.state;
        }
    }

    return 0xFF;
}

ASMUsed bool DebugMenuHandler_DisableHUD() {
    if (DebugMenu_CheckOption(DebugMenuOptions::DisableHUDPartial)) {
        const u8 gameState = FetchGameState();
        return gameState == 6 || gameState == 7;
    }
    if (DebugMenu_CheckOption(DebugMenuOptions::DisableHUDFull)) {
        const u8 gameState = FetchGameState();
        return gameState == 6 || gameState == 7 || gameState == 0xA;
    }

    return false;
}

void DebugMenuHandler_InfiniteAir(Player &player) {
    if (DebugMenu_CheckOption(DebugMenuOptions::InfiniteAir) && !player.specialFlags.hasAny(SpecialFlags::ringGear)) {
        player.currentAir = player.gearStats[player.level].maxAir;
    }
}

void DebugMenuHandler_InfiniteRings(Player &player) {
    if (DebugMenu_CheckOption(DebugMenuOptions::InfiniteRings)) {
        if (player.specialFlags.hasAny(SpecialFlags::ringGear)) {
            player.currentAir = player.gearStats[player.level].maxAir;
        } else {
            player.rings = player.max_rings();// to account for more than 100 max ring gears lol
        }
    }
}

ASMUsed bool DebugMenuHandler_StageHazards() {
	if (DebugMenu_CheckOption(DebugMenuOptions::VanillaHazardsOn)) return true; // Turn all hazards on.
	if (DebugMenu_CheckOption(DebugMenuOptions::VanillaHazardsSkyRoadTurb) && CurrentStage == SkyRoad) return true; // This assumes we know we're on sky road for this
	if (DebugMenu_CheckOption(DebugMenuOptions::VanillaHazardsDigiHands) && CurrentStage == DigitalDimension) return true; // This assumes we know we're on digi for this
	return false; // Do not turn on hazards if no toggles are on
}